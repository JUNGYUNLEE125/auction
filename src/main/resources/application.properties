# access log
server.tomcat.accesslog.pattern=%{yyyy-MM-dd HH:mm:ss}t %s %r %{User-Agent}i %{Referer}i %{X-Forwarded-For}i %b
server.tomcat.accesslog.directory=logs/accesslog
server.tomcat.accesslog.enabled=true
server.tomcat.basedir=.

reactor.netty.http.server.accessLogEnabled=true

# JPA setting
# 영속성이 트랜잭션을 벗어나면 사라지게 함, 트랜잭션 범위를벗어나도 살아있으면 성능저하가 올수있음 
spring.jpa.open-in-view=false

#============================================================================
# netty socket io setting
#============================================================================
# 프레임당 처리되는 데이터의 최대 길이
socketio.maxFramePayloadLength=1048576
# http 최대 내용 길이 설정
socketio.maxHttpContentLength=1048576
# 소켓 연결 수 및 크기 (if only one port is monitored, the boss thread group is 1)
socketio.bossCount=1
socketio.workCount=1000
socketio.allowCustomRequests=true
# 프로토콜 업그레이드 시간 초과(MS), 기본 10초.
socketio.upgradeTimeout=1000000
# Ping 메시지의 제한 시간(MS)은 기본적으로 60초입니다. 이 시간 간격 내에 하트비트 메시지가 수신되지 않으면 시간 초과 이벤트가 전송됩니다.
socketio.pingTimeout=6000000
# ping 메시지 간격(MS), 기본적으로 25초입니다. 클라이언트에서 서버로 하트비트 메시지를 보내는 간격
socketio.pingInterval=25000


#  The maximum length of time to wait for the connection pool to allocate the connection （ millisecond ）, Connections that have not been available for more than this period of time occur SQLException,  Default :30 second 
spring.datasource.hikari.connection-timeout=30000
#  Minimum connections 
spring.datasource.hikari.minimum-idle=5
#  maximum connection 
spring.datasource.hikari.maximum-pool-size=150
#  Automatic submission 
spring.datasource.hikari.auto-commit=true
#  A connection idle The maximum duration of a state （ millisecond ）, Timeout is released （retired）, Default :10 minute 
spring.datasource.hikari.idle-timeout=600000
#  Connection pool name 
spring.datasource.hikari.pool-name=DatebookHikariCP
#  A connected life span （ millisecond ）, Time out and not used is released （retired）, Default :30 minute  1800000ms, It is recommended to set the timeout less than the database 60 second , Reference resources MySQL wait_timeout Parameters （show variables like '%timeout%';） -->
spring.datasource.hikari.max-lifetime=28740000
spring.datasource.hikari.connection-test-query=SELECT 1

# swagger
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

spring.main.allow-bean-definition-overriding = true
# 암호화
jasypt.encryptor.bean=jasyptEncryptor
jasypt.encryptor.property.prefix=ENC(
jasypt.encryptor.property.suffix=)

#Monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
